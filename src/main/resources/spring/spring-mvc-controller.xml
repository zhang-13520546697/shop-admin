<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

    <!-- 对项目中的所有类进行扫描以完成Bean创建并进行自动注入。
                支持 @Controller、@Service 以及 @Repository 和 @Component -->
    <!-- 扫描项目中com.fh.shop.controller包下所有的类，从而使类中的@Controller注解生效 -->
    <context:component-scan base-package="com.fh.shop.controller"/>

    <!-- 统一异常处理 -->
    <context:component-scan base-package="com.fh.shop.exception"/>


    <!-- 注解驱动 -->
    <mvc:annotation-driven/>

    <!--  静态文件访问,主要是让DispatcherServlet不拦截以下静态资源 -->
    <mvc:resources location="/commons/" mapping="/commons/**"/>
    <mvc:resources location="/common/" mapping="/common/**"/>
    <mvc:resources location="/userimg/" mapping="/userimg/**"/>

    <!-- 登录拦截器-->
   <mvc:interceptors>
        <mvc:interceptor>
            <!-- 默认拦截所有请求-->
            <mvc:mapping path="/**/"/>
            <bean class="com.fh.shop.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--
        jsp视图解析器，对模型视图名称的解析，即在模型视图名称添加前后缀
        如/view/welcome.jsp对应的视图名就是：welcome
        这个类在视图解析器链中一定要定义在其他视图的后面，因为它始终会返回一个视图
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!-- 上传文件配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> <!--允许上传文件大小 -->
        <property name="maxUploadSize" value="104857600000" />
        <!--缓存大小 -->
        <property name="maxInMemorySize" value="4096" />
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <!-- 定义切面类的配置 -->
    <bean id="LogAspecr" class="com.fh.shop.aspect.LogAspect"></bean>

     <aop:config>
         <aop:aspect ref="LogAspecr">
             <aop:pointcut id="pointCut" expression="execution(* com.fh.shop.controller..*.del*(..)) || execution(* com.fh.shop.controller..*.update*(..)) || execution(* com.fh.shop.controller..*.add*(..)) || execution(* com.fh.shop.controller..*.insert*(..)) || execution(* com.fh.shop.controller..*.bach*(..))"></aop:pointcut>
             <aop:around method="doLog" pointcut-ref="pointCut"></aop:around>
         </aop:aspect>
     </aop:config>

</beans>